.TH "/devel/graphdata/graphDataLib/include/graphData.h" 3 "Graph Data Shared Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/devel/graphdata/graphDataLib/include/graphData.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBfeature_t\fP"
.br
.RI "Feature/attribute structure for a graph item\&. "
.ti -1c
.RI "struct \fBnode_t\fP"
.br
.RI "Graph node structure\&. "
.ti -1c
.RI "struct \fBedge_t\fP"
.br
.RI "Graph edge structure, representing linkages between nodes\&. "
.ti -1c
.RI "struct \fBdimensions_t\fP"
.br
.RI "Structure to hold values for dimensional graphs\&. "
.ti -1c
.RI "struct \fBlabels_t\fP"
.br
.RI "Structure holding identifiers for 'label' nodes\&. "
.ti -1c
.RI "struct \fBgraph_t\fP"
.br
.RI "Structure containing the backing data for the graph representation\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBGRAPHDOMAIN\fP { \fBUNDIRECTED\fP = 0x0000, \fBDIRECTED\fP = 0x0001, \fBSHARED_MMAP\fP = 0x0002, \fBSHARED_MEM\fP = 0x0004, \fBARRAY\fP = 0x0010, \fBLINKED\fP = 0x0020, \fBHASHED\fP = 0x0040, \fBGENERIC\fP = 0x0100, \fBSPATIAL\fP = 0x0200, \fBUNLABELED\fP = 0x1000, \fBLABELED\fP = 0x2000 }"
.br
.RI "Basic graph data definitions\&. "
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBGRAPHDOMAIN\fP"

.PP
Basic graph data definitions\&. This header contains the basic structures and definitions for graph data\&.
.PP
Descriptor of the graph structure and usage\&.
.PP
This enum is used to described, as best as possible, the types of operations that will be necessary for this graph to fulfill the consumer's needs\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIUNDIRECTED \fP\fP
An undirected graph structure e(u,v) == e(v,u) The minimum number of edges will be used to represent connectivity between nodes\&. 
.TP
\fB\fIDIRECTED \fP\fP
A directed graph structure e(u,v) != e(v,u) Each edge description {u,v} will be distinct\&. 
.TP
\fB\fISHARED_MMAP \fP\fP
Graph structures shared with other processes via memory-mapped files\&. Shared graph structures directly denote array-based graphs 
.TP
\fB\fISHARED_MEM \fP\fP
Graph structures shared with other process via shared memory locations\&. Shared graph structures directly denote array-based graphs 
.TP
\fB\fIARRAY \fP\fP
The underlying implementation is an array-based structure\&. 
.TP
\fB\fILINKED \fP\fP
The underlying structure is a double-linked list of nodes and edges\&. 
.TP
\fB\fIHASHED \fP\fP
The underlying structure is a set of adjacency lists in hashtable form\&. 
.TP
\fB\fIGENERIC \fP\fP
The graph represents a generic structure with no particular standardized relationship between nodes\&. 
.TP
\fB\fISPATIAL \fP\fP
The graph represents an ordered set of nodes within a coordinate system, and edges are related to spatial 'neighborhoods'\&. 
.TP
\fB\fIUNLABELED \fP\fP
The graph has no specialized node values\&. 
.TP
\fB\fILABELED \fP\fP
The graph has a set of nodes representing categorical labeling of associated nodes\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Graph Data Shared Library from the source code\&.
