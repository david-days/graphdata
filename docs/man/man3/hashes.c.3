.TH "/devel/graphdata/graphDataLib/src/util/hashes.c" 3 "Graph Data Shared Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/devel/graphdata/graphDataLib/src/util/hashes.c
.SH SYNOPSIS
.br
.PP
\fC#include <util/hashes\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBget16bits\fP(d)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "size_t \fBSuperFastHash\fP (const char *data, int len)"
.br
.ti -1c
.RI "size_t \fBmaxEratosthenesPrime\fP (size_t *idx)"
.br
.RI "Using the Sieve of Eratosthenes, calculate the max prime value below the given value\&. "
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define get16bits(d)"
\fBValue:\fP.PP
.nf
                       ((((size_t)(((const uint8_t *)(d))[1])) << 8)\\
                       +(size_t)(((const uint8_t *)(d))[0]) )
.fi
Source code for SuperFastHash used from http://www.azillionmonkeys.com/qed/hash.html under LGPL 2\&.1 license 
.SH "Function Documentation"
.PP 
.SS "size_t maxEratosthenesPrime (size_t * idx)"

.PP
Using the Sieve of Eratosthenes, calculate the max prime value below the given value\&. Quick and dirty (not necessarily computationally quick) way to get the max prime number below the given value\&.
.PP
Implementation based off example code at https://www.programminglogic.com/the-sieve-of-eratosthenes-implemented-in-c/
.PP
\fBParameters\fP
.RS 4
\fIidx\fP Size value to search the max prime number below 
.RE
.PP
\fBReturns\fP
.RS 4
Prime number within the range given by the input, if successful; otherwise, returns 0 
.RE
.PP

.SS "size_t SuperFastHash (const char * data, int len)"
Calculate a unique hash for the char data\&. SuperFastHash used from http://www.azillionmonkeys.com/qed/hash.html under LGPL 2\&.1 license 
.PP
\fBParameters\fP
.RS 4
\fIdata\fP character data (string value) to be hashed 
.br
\fIlen\fP Length of the character data 
.RE
.PP
\fBReturns\fP
.RS 4
hash value of the character data, if not null; otherwise, zero\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Graph Data Shared Library from the source code\&.
